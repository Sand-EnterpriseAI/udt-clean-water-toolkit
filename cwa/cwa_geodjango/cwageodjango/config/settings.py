"""
Django settings for cwageodjango.config project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
import platform
from pathlib import Path

from neomodel import config as neo_config
from sqids import Sqids


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

if os.path.exists(os.path.join(BASE_DIR, ".env")):
    from dotenv import load_dotenv

    load_dotenv(os.path.join(BASE_DIR, ".env"))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY__ENV_VAR")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Application definition

INSTALLED_APPS = [
    "cwageodjango.core",
    "cwageodjango.assets",
    "cwageodjango.utilities",
    "django.contrib.gis",
    "cwageodjango.waterpipes"
]

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": os.getenv("POSTGIS_DB_NAME__ENV_VAR"),
        "USER": os.getenv("POSTGIS_DB_USER__ENV_VAR"),
        "PASSWORD": os.getenv("POSTGIS_DEFAULT_DB_PASSWORD__ENV_VAR"),
        "HOST": os.getenv("POSTGIS_DEFAULT_DB_HOST__ENV_VAR"),
        "PORT": os.getenv("POSTGIS_DEFAULT_PORT__ENV_VAR"),
    }
}

# currently only works with neo4j
# TO DO: cleanup how this is used
GRAPH_DATABASES = {
    "default": {
        "HOST": os.getenv("CWA_NEO4J_HOST"),
        "PORT": "7687",
        "USER": os.getenv("CWA_NEO4J_USER"),
        "PASSWORD": os.getenv("CWA_NEO4J_PASSWORD"),
    }
}

default_graph_db = GRAPH_DATABASES["default"]
graph_uri = f"{default_graph_db.get('HOST')}:{default_graph_db.get('PORT')}"
graph_db_user = default_graph_db.get("USER")
graph_password = default_graph_db.get("PASSWORD")

neo_config.DATABASE_URL = f"bolt://{graph_db_user}:{graph_password}@{graph_uri}"


LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

sqids = Sqids(alphabet=os.getenv("SQID_ALPHABET"))

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
}

# LOGGING = {
#     "version": 1,
#     "filters": {
#         "require_debug_true": {
#             "()": "django.utils.log.RequireDebugTrue",
#         }
#     },
#     "handlers": {
#         "console": {
#             "level": "DEBUG",
#             "filters": ["require_debug_true"],
#             "class": "logging.StreamHandler",
#         }
#     },
#     "loggers": {
#         "django.db.backends": {
#             "level": "DEBUG",
#             "handlers": ["console"],
#         }
#     },
# }

if os.path.exists(os.path.join(BASE_DIR, ".env")):
    DEBUG = True
    DEFAULT_RENDERER_CLASSES = ("rest_framework.renderers.JSONRenderer",)
    TW_GS_CLEAN_WATER_ZIP_PATH = os.getenv("TW_GS_CLEAN_WATER_ZIP_PATH__ENV_VAR")

    if platform.system() == "Darwin":  # only set imports for MacOS
        GDAL_LIBRARY_PATH = "/opt/homebrew/opt/gdal/lib/libgdal.dylib"  # added this
        GEOS_LIBRARY_PATH = "/opt/homebrew/opt/geos/lib/libgeos_c.dylib"  # added this
        SPATIALITE_LIBRARY_PATH = (
            "/System/Volumes/Data/opt/homebrew/lib/mod_spatialite.dylib"  # added this
        )
